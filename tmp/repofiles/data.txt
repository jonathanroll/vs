CREATE TABLE `strapi_migrations` (`id` integer not null primary key autoincrement, `name` varchar(255), `time` datetime);
CREATE TABLE sqlite_sequence(name,seq);
CREATE TABLE `strapi_database_schema` (`id` integer not null primary key autoincrement, `schema` json, `time` datetime, `hash` varchar(255));
CREATE TABLE `strapi_core_store_settings` (`id` integer not null primary key autoincrement, `key` varchar(255) null, `value` text null, `type` varchar(255) null, `environment` varchar(255) null, `tag` varchar(255) null);
CREATE TABLE `strapi_webhooks` (`id` integer not null primary key autoincrement, `name` varchar(255) null, `url` text null, `headers` json null, `events` json null, `enabled` boolean null);
CREATE TABLE `components_decoration_heroes` (`id` integer not null primary key autoincrement, `title` varchar(255) null);
CREATE TABLE `components_shared_seos` (`id` integer not null primary key autoincrement, `meta_title` varchar(255) null, `meta_description` text null);
CREATE TABLE IF NOT EXISTS "admin_permissions" (`id` integer PRIMARY KEY AUTOINCREMENT NOT NULL, `action` varchar(255) NULL, `subject` varchar(255) NULL, `properties` json NULL, `conditions` json NULL, `created_at` datetime NULL, `updated_at` datetime NULL, `created_by_id` integer NULL, `updated_by_id` integer NULL, CONSTRAINT `admin_permissions_created_by_id_fk` FOREIGN KEY (`created_by_id`) REFERENCES `admin_users` (`id`) ON DELETE SET NULL, CONSTRAINT `admin_permissions_updated_by_id_fk` FOREIGN KEY (`updated_by_id`) REFERENCES `admin_users` (`id`) ON DELETE SET NULL, CONSTRAINT `admin_permissions_created_by_id_fk` FOREIGN KEY (`created_by_id`) REFERENCES `admin_users` (`id`) ON DELETE SET NULL, CONSTRAINT `admin_permissions_updated_by_id_fk` FOREIGN KEY (`updated_by_id`) REFERENCES `admin_users` (`id`) ON DELETE SET NULL);
CREATE INDEX `admin_permissions_created_by_id_fk` on `admin_permissions` (`created_by_id`);
CREATE INDEX `admin_permissions_updated_by_id_fk` on `admin_permissions` (`updated_by_id`);
CREATE TABLE IF NOT EXISTS "admin_users" (`id` integer PRIMARY KEY AUTOINCREMENT NOT NULL, `firstname` varchar(255) NULL, `lastname` varchar(255) NULL, `username` varchar(255) NULL, `email` varchar(255) NULL, `password` varchar(255) NULL, `reset_password_token` varchar(255) NULL, `registration_token` varchar(255) NULL, `is_active` boolean NULL, `blocked` boolean NULL, `prefered_language` varchar(255) NULL, `created_at` datetime NULL, `updated_at` datetime NULL, `created_by_id` integer NULL, `updated_by_id` integer NULL, CONSTRAINT `admin_users_created_by_id_fk` FOREIGN KEY (`created_by_id`) REFERENCES `admin_users` (`id`) ON DELETE SET NULL, CONSTRAINT `admin_users_updated_by_id_fk` FOREIGN KEY (`updated_by_id`) REFERENCES `admin_users` (`id`) ON DELETE SET NULL, CONSTRAINT `admin_users_created_by_id_fk` FOREIGN KEY (`created_by_id`) REFERENCES `admin_users` (`id`) ON DELETE SET NULL, CONSTRAINT `admin_users_updated_by_id_fk` FOREIGN KEY (`updated_by_id`) REFERENCES `admin_users` (`id`) ON DELETE SET NULL);
CREATE INDEX `admin_users_created_by_id_fk` on `admin_users` (`created_by_id`);
CREATE INDEX `admin_users_updated_by_id_fk` on `admin_users` (`updated_by_id`);
CREATE TABLE IF NOT EXISTS "admin_roles" (`id` integer PRIMARY KEY AUTOINCREMENT NOT NULL, `name` varchar(255) NULL, `code` varchar(255) NULL, `description` varchar(255) NULL, `created_at` datetime NULL, `updated_at` datetime NULL, `created_by_id` integer NULL, `updated_by_id` integer NULL, CONSTRAINT `admin_roles_created_by_id_fk` FOREIGN KEY (`created_by_id`) REFERENCES `admin_users` (`id`) ON DELETE SET NULL, CONSTRAINT `admin_roles_updated_by_id_fk` FOREIGN KEY (`updated_by_id`) REFERENCES `admin_users` (`id`) ON DELETE SET NULL, CONSTRAINT `admin_roles_created_by_id_fk` FOREIGN KEY (`created_by_id`) REFERENCES `admin_users` (`id`) ON DELETE SET NULL, CONSTRAINT `admin_roles_updated_by_id_fk` FOREIGN KEY (`updated_by_id`) REFERENCES `admin_users` (`id`) ON DELETE SET NULL);
CREATE INDEX `admin_roles_created_by_id_fk` on `admin_roles` (`created_by_id`);
CREATE INDEX `admin_roles_updated_by_id_fk` on `admin_roles` (`updated_by_id`);
CREATE TABLE IF NOT EXISTS "strapi_api_tokens" (`id` integer PRIMARY KEY AUTOINCREMENT NOT NULL, `name` varchar(255) NULL, `description` varchar(255) NULL, `type` varchar(255) NULL, `access_key` varchar(255) NULL, `created_at` datetime NULL, `updated_at` datetime NULL, `created_by_id` integer NULL, `updated_by_id` integer NULL, CONSTRAINT `strapi_api_tokens_created_by_id_fk` FOREIGN KEY (`created_by_id`) REFERENCES `admin_users` (`id`) ON DELETE SET NULL, CONSTRAINT `strapi_api_tokens_updated_by_id_fk` FOREIGN KEY (`updated_by_id`) REFERENCES `admin_users` (`id`) ON DELETE SET NULL, CONSTRAINT `strapi_api_tokens_created_by_id_fk` FOREIGN KEY (`created_by_id`) REFERENCES `admin_users` (`id`) ON DELETE SET NULL, CONSTRAINT `strapi_api_tokens_updated_by_id_fk` FOREIGN KEY (`updated_by_id`) REFERENCES `admin_users` (`id`) ON DELETE SET NULL);
CREATE INDEX `strapi_api_tokens_created_by_id_fk` on `strapi_api_tokens` (`created_by_id`);
CREATE INDEX `strapi_api_tokens_updated_by_id_fk` on `strapi_api_tokens` (`updated_by_id`);
CREATE TABLE IF NOT EXISTS "files" (`id` integer PRIMARY KEY AUTOINCREMENT NOT NULL, `name` varchar(255) NULL, `alternative_text` varchar(255) NULL, `caption` varchar(255) NULL, `width` integer NULL, `height` integer NULL, `formats` json NULL, `hash` varchar(255) NULL, `ext` varchar(255) NULL, `mime` varchar(255) NULL, `size` float NULL, `url` varchar(255) NULL, `preview_url` varchar(255) NULL, `provider` varchar(255) NULL, `provider_metadata` json NULL, `created_at` datetime NULL, `updated_at` datetime NULL, `created_by_id` integer NULL, `updated_by_id` integer NULL, CONSTRAINT `files_created_by_id_fk` FOREIGN KEY (`created_by_id`) REFERENCES `admin_users` (`id`) ON DELETE SET NULL, CONSTRAINT `files_updated_by_id_fk` FOREIGN KEY (`updated_by_id`) REFERENCES `admin_users` (`id`) ON DELETE SET NULL, CONSTRAINT `files_created_by_id_fk` FOREIGN KEY (`created_by_id`) REFERENCES `admin_users` (`id`) ON DELETE SET NULL, CONSTRAINT `files_updated_by_id_fk` FOREIGN KEY (`updated_by_id`) REFERENCES `admin_users` (`id`) ON DELETE SET NULL);
CREATE INDEX `files_created_by_id_fk` on `files` (`created_by_id`);
CREATE INDEX `files_updated_by_id_fk` on `files` (`updated_by_id`);
CREATE TABLE IF NOT EXISTS "up_permissions" (`id` integer PRIMARY KEY AUTOINCREMENT NOT NULL, `action` varchar(255) NULL, `created_at` datetime NULL, `updated_at` datetime NULL, `created_by_id` integer NULL, `updated_by_id` integer NULL, CONSTRAINT `up_permissions_created_by_id_fk` FOREIGN KEY (`created_by_id`) REFERENCES `admin_users` (`id`) ON DELETE SET NULL, CONSTRAINT `up_permissions_updated_by_id_fk` FOREIGN KEY (`updated_by_id`) REFERENCES `admin_users` (`id`) ON DELETE SET NULL, CONSTRAINT `up_permissions_created_by_id_fk` FOREIGN KEY (`created_by_id`) REFERENCES `admin_users` (`id`) ON DELETE SET NULL, CONSTRAINT `up_permissions_updated_by_id_fk` FOREIGN KEY (`updated_by_id`) REFERENCES `admin_users` (`id`) ON DELETE SET NULL);
CREATE INDEX `up_permissions_created_by_id_fk` on `up_permissions` (`created_by_id`);
CREATE INDEX `up_permissions_updated_by_id_fk` on `up_permissions` (`updated_by_id`);
CREATE TABLE IF NOT EXISTS "up_roles" (`id` integer PRIMARY KEY AUTOINCREMENT NOT NULL, `name` varchar(255) NULL, `description` varchar(255) NULL, `type` varchar(255) NULL, `created_at` datetime NULL, `updated_at` datetime NULL, `created_by_id` integer NULL, `updated_by_id` integer NULL, CONSTRAINT `up_roles_created_by_id_fk` FOREIGN KEY (`created_by_id`) REFERENCES `admin_users` (`id`) ON DELETE SET NULL, CONSTRAINT `up_roles_updated_by_id_fk` FOREIGN KEY (`updated_by_id`) REFERENCES `admin_users` (`id`) ON DELETE SET NULL, CONSTRAINT `up_roles_created_by_id_fk` FOREIGN KEY (`created_by_id`) REFERENCES `admin_users` (`id`) ON DELETE SET NULL, CONSTRAINT `up_roles_updated_by_id_fk` FOREIGN KEY (`updated_by_id`) REFERENCES `admin_users` (`id`) ON DELETE SET NULL);
CREATE INDEX `up_roles_created_by_id_fk` on `up_roles` (`created_by_id`);
CREATE INDEX `up_roles_updated_by_id_fk` on `up_roles` (`updated_by_id`);
CREATE TABLE IF NOT EXISTS "up_users" (`id` integer PRIMARY KEY AUTOINCREMENT NOT NULL, `username` varchar(255) NULL, `email` varchar(255) NULL, `provider` varchar(255) NULL, `password` varchar(255) NULL, `reset_password_token` varchar(255) NULL, `confirmation_token` varchar(255) NULL, `confirmed` boolean NULL, `blocked` boolean NULL, `created_at` datetime NULL, `updated_at` datetime NULL, `created_by_id` integer NULL, `updated_by_id` integer NULL, CONSTRAINT `up_users_created_by_id_fk` FOREIGN KEY (`created_by_id`) REFERENCES `admin_users` (`id`) ON DELETE SET NULL, CONSTRAINT `up_users_updated_by_id_fk` FOREIGN KEY (`updated_by_id`) REFERENCES `admin_users` (`id`) ON DELETE SET NULL, CONSTRAINT `up_users_created_by_id_fk` FOREIGN KEY (`created_by_id`) REFERENCES `admin_users` (`id`) ON DELETE SET NULL, CONSTRAINT `up_users_updated_by_id_fk` FOREIGN KEY (`updated_by_id`) REFERENCES `admin_users` (`id`) ON DELETE SET NULL);
CREATE INDEX `up_users_created_by_id_fk` on `up_users` (`created_by_id`);
CREATE INDEX `up_users_updated_by_id_fk` on `up_users` (`updated_by_id`);
CREATE TABLE IF NOT EXISTS "i18n_locale" (`id` integer PRIMARY KEY AUTOINCREMENT NOT NULL, `name` varchar(255) NULL, `code` varchar(255) NULL, `created_at` datetime NULL, `updated_at` datetime NULL, `created_by_id` integer NULL, `updated_by_id` integer NULL, CONSTRAINT `i18n_locale_created_by_id_fk` FOREIGN KEY (`created_by_id`) REFERENCES `admin_users` (`id`) ON DELETE SET NULL, CONSTRAINT `i18n_locale_updated_by_id_fk` FOREIGN KEY (`updated_by_id`) REFERENCES `admin_users` (`id`) ON DELETE SET NULL, CONSTRAINT `i18n_locale_created_by_id_fk` FOREIGN KEY (`created_by_id`) REFERENCES `admin_users` (`id`) ON DELETE SET NULL, CONSTRAINT `i18n_locale_updated_by_id_fk` FOREIGN KEY (`updated_by_id`) REFERENCES `admin_users` (`id`) ON DELETE SET NULL);
CREATE INDEX `i18n_locale_created_by_id_fk` on `i18n_locale` (`created_by_id`);
CREATE INDEX `i18n_locale_updated_by_id_fk` on `i18n_locale` (`updated_by_id`);
CREATE TABLE IF NOT EXISTS "articles" (`id` integer PRIMARY KEY AUTOINCREMENT NOT NULL, `title` varchar(255) NULL, `description` text NULL, `content` text NULL, `slug` varchar(255) NULL, `created_at` datetime NULL, `updated_at` datetime NULL, `published_at` datetime NULL, `created_by_id` integer NULL, `updated_by_id` integer NULL, CONSTRAINT `articles_created_by_id_fk` FOREIGN KEY (`created_by_id`) REFERENCES `admin_users` (`id`) ON DELETE SET NULL, CONSTRAINT `articles_updated_by_id_fk` FOREIGN KEY (`updated_by_id`) REFERENCES `admin_users` (`id`) ON DELETE SET NULL, CONSTRAINT `articles_created_by_id_fk` FOREIGN KEY (`created_by_id`) REFERENCES `admin_users` (`id`) ON DELETE SET NULL, CONSTRAINT `articles_updated_by_id_fk` FOREIGN KEY (`updated_by_id`) REFERENCES `admin_users` (`id`) ON DELETE SET NULL);
CREATE UNIQUE INDEX `articles_slug_unique` on `articles` (`slug`);
CREATE INDEX `articles_created_by_id_fk` on `articles` (`created_by_id`);
CREATE INDEX `articles_updated_by_id_fk` on `articles` (`updated_by_id`);
CREATE TABLE IF NOT EXISTS "categories" (`id` integer PRIMARY KEY AUTOINCREMENT NOT NULL, `name` varchar(255) NULL, `slug` varchar(255) NULL, `created_at` datetime NULL, `updated_at` datetime NULL, `created_by_id` integer NULL, `updated_by_id` integer NULL, CONSTRAINT `categories_created_by_id_fk` FOREIGN KEY (`created_by_id`) REFERENCES `admin_users` (`id`) ON DELETE SET NULL, CONSTRAINT `categories_updated_by_id_fk` FOREIGN KEY (`updated_by_id`) REFERENCES `admin_users` (`id`) ON DELETE SET NULL, CONSTRAINT `categories_created_by_id_fk` FOREIGN KEY (`created_by_id`) REFERENCES `admin_users` (`id`) ON DELETE SET NULL, CONSTRAINT `categories_updated_by_id_fk` FOREIGN KEY (`updated_by_id`) REFERENCES `admin_users` (`id`) ON DELETE SET NULL);
CREATE UNIQUE INDEX `categories_slug_unique` on `categories` (`slug`);
CREATE INDEX `categories_created_by_id_fk` on `categories` (`created_by_id`);
CREATE INDEX `categories_updated_by_id_fk` on `categories` (`updated_by_id`);
CREATE TABLE IF NOT EXISTS "globals" (`id` integer PRIMARY KEY AUTOINCREMENT NOT NULL, `site_name` varchar(255) NULL, `created_at` datetime NULL, `updated_at` datetime NULL, `created_by_id` integer NULL, `updated_by_id` integer NULL, CONSTRAINT `globals_created_by_id_fk` FOREIGN KEY (`created_by_id`) REFERENCES `admin_users` (`id`) ON DELETE SET NULL, CONSTRAINT `globals_updated_by_id_fk` FOREIGN KEY (`updated_by_id`) REFERENCES `admin_users` (`id`) ON DELETE SET NULL, CONSTRAINT `globals_created_by_id_fk` FOREIGN KEY (`created_by_id`) REFERENCES `admin_users` (`id`) ON DELETE SET NULL, CONSTRAINT `globals_updated_by_id_fk` FOREIGN KEY (`updated_by_id`) REFERENCES `admin_users` (`id`) ON DELETE SET NULL);
CREATE INDEX `globals_created_by_id_fk` on `globals` (`created_by_id`);
CREATE INDEX `globals_updated_by_id_fk` on `globals` (`updated_by_id`);
CREATE TABLE IF NOT EXISTS "homepages" (`id` integer PRIMARY KEY AUTOINCREMENT NOT NULL, `created_at` datetime NULL, `updated_at` datetime NULL, `created_by_id` integer NULL, `updated_by_id` integer NULL, CONSTRAINT `homepages_created_by_id_fk` FOREIGN KEY (`created_by_id`) REFERENCES `admin_users` (`id`) ON DELETE SET NULL, CONSTRAINT `homepages_updated_by_id_fk` FOREIGN KEY (`updated_by_id`) REFERENCES `admin_users` (`id`) ON DELETE SET NULL, CONSTRAINT `homepages_created_by_id_fk` FOREIGN KEY (`created_by_id`) REFERENCES `admin_users` (`id`) ON DELETE SET NULL, CONSTRAINT `homepages_updated_by_id_fk` FOREIGN KEY (`updated_by_id`) REFERENCES `admin_users` (`id`) ON DELETE SET NULL);
CREATE INDEX `homepages_created_by_id_fk` on `homepages` (`created_by_id`);
CREATE INDEX `homepages_updated_by_id_fk` on `homepages` (`updated_by_id`);
CREATE TABLE IF NOT EXISTS "writers" (`id` integer PRIMARY KEY AUTOINCREMENT NOT NULL, `name` varchar(255) NULL, `email` varchar(255) NULL, `created_at` datetime NULL, `updated_at` datetime NULL, `created_by_id` integer NULL, `updated_by_id` integer NULL, CONSTRAINT `writers_created_by_id_fk` FOREIGN KEY (`created_by_id`) REFERENCES `admin_users` (`id`) ON DELETE SET NULL, CONSTRAINT `writers_updated_by_id_fk` FOREIGN KEY (`updated_by_id`) REFERENCES `admin_users` (`id`) ON DELETE SET NULL, CONSTRAINT `writers_created_by_id_fk` FOREIGN KEY (`created_by_id`) REFERENCES `admin_users` (`id`) ON DELETE SET NULL, CONSTRAINT `writers_updated_by_id_fk` FOREIGN KEY (`updated_by_id`) REFERENCES `admin_users` (`id`) ON DELETE SET NULL);
CREATE INDEX `writers_created_by_id_fk` on `writers` (`created_by_id`);
CREATE INDEX `writers_updated_by_id_fk` on `writers` (`updated_by_id`);
CREATE TABLE IF NOT EXISTS "admin_permissions_role_links" (`permission_id` integer NULL, `role_id` integer NULL, CONSTRAINT `admin_permissions_role_links_fk` FOREIGN KEY (`permission_id`) REFERENCES `admin_permissions` (`id`) ON DELETE CASCADE, CONSTRAINT `admin_permissions_role_links_inv_fk` FOREIGN KEY (`role_id`) REFERENCES `admin_roles` (`id`) ON DELETE CASCADE, CONSTRAINT `admin_permissions_role_links_fk` FOREIGN KEY (`permission_id`) REFERENCES `admin_permissions` (`id`) ON DELETE CASCADE, CONSTRAINT `admin_permissions_role_links_inv_fk` FOREIGN KEY (`role_id`) REFERENCES `admin_roles` (`id`) ON DELETE CASCADE);
CREATE INDEX `admin_permissions_role_links_fk` on `admin_permissions_role_links` (`permission_id`);
CREATE INDEX `admin_permissions_role_links_inv_fk` on `admin_permissions_role_links` (`role_id`);
CREATE TABLE IF NOT EXISTS "admin_users_roles_links" (`user_id` integer NULL, `role_id` integer NULL, CONSTRAINT `admin_users_roles_links_fk` FOREIGN KEY (`user_id`) REFERENCES `admin_users` (`id`) ON DELETE CASCADE, CONSTRAINT `admin_users_roles_links_inv_fk` FOREIGN KEY (`role_id`) REFERENCES `admin_roles` (`id`) ON DELETE CASCADE, CONSTRAINT `admin_users_roles_links_fk` FOREIGN KEY (`user_id`) REFERENCES `admin_users` (`id`) ON DELETE CASCADE, CONSTRAINT `admin_users_roles_links_inv_fk` FOREIGN KEY (`role_id`) REFERENCES `admin_roles` (`id`) ON DELETE CASCADE);
CREATE INDEX `admin_users_roles_links_fk` on `admin_users_roles_links` (`user_id`);
CREATE INDEX `admin_users_roles_links_inv_fk` on `admin_users_roles_links` (`role_id`);
CREATE TABLE IF NOT EXISTS "files_related_morphs" (`file_id` integer NULL, `related_id` integer NULL, `related_type` varchar(255) NULL, `field` varchar(255) NULL, `order` integer NULL, CONSTRAINT `files_related_morphs_fk` FOREIGN KEY (`file_id`) REFERENCES `files` (`id`) ON DELETE CASCADE, CONSTRAINT `files_related_morphs_fk` FOREIGN KEY (`file_id`) REFERENCES `files` (`id`) ON DELETE CASCADE);
CREATE INDEX `files_related_morphs_fk` on `files_related_morphs` (`file_id`);
CREATE TABLE IF NOT EXISTS "up_permissions_role_links" (`permission_id` integer NULL, `role_id` integer NULL, CONSTRAINT `up_permissions_role_links_fk` FOREIGN KEY (`permission_id`) REFERENCES `up_permissions` (`id`) ON DELETE CASCADE, CONSTRAINT `up_permissions_role_links_inv_fk` FOREIGN KEY (`role_id`) REFERENCES `up_roles` (`id`) ON DELETE CASCADE, CONSTRAINT `up_permissions_role_links_fk` FOREIGN KEY (`permission_id`) REFERENCES `up_permissions` (`id`) ON DELETE CASCADE, CONSTRAINT `up_permissions_role_links_inv_fk` FOREIGN KEY (`role_id`) REFERENCES `up_roles` (`id`) ON DELETE CASCADE);
CREATE INDEX `up_permissions_role_links_fk` on `up_permissions_role_links` (`permission_id`);
CREATE INDEX `up_permissions_role_links_inv_fk` on `up_permissions_role_links` (`role_id`);
CREATE TABLE IF NOT EXISTS "up_users_role_links" (`user_id` integer NULL, `role_id` integer NULL, CONSTRAINT `up_users_role_links_fk` FOREIGN KEY (`user_id`) REFERENCES `up_users` (`id`) ON DELETE CASCADE, CONSTRAINT `up_users_role_links_inv_fk` FOREIGN KEY (`role_id`) REFERENCES `up_roles` (`id`) ON DELETE CASCADE, CONSTRAINT `up_users_role_links_fk` FOREIGN KEY (`user_id`) REFERENCES `up_users` (`id`) ON DELETE CASCADE, CONSTRAINT `up_users_role_links_inv_fk` FOREIGN KEY (`role_id`) REFERENCES `up_roles` (`id`) ON DELETE CASCADE);
CREATE INDEX `up_users_role_links_fk` on `up_users_role_links` (`user_id`);
CREATE INDEX `up_users_role_links_inv_fk` on `up_users_role_links` (`role_id`);
CREATE TABLE IF NOT EXISTS "articles_category_links" (`article_id` integer NULL, `category_id` integer NULL, CONSTRAINT `articles_category_links_fk` FOREIGN KEY (`article_id`) REFERENCES `articles` (`id`) ON DELETE CASCADE, CONSTRAINT `articles_category_links_inv_fk` FOREIGN KEY (`category_id`) REFERENCES `categories` (`id`) ON DELETE CASCADE, CONSTRAINT `articles_category_links_fk` FOREIGN KEY (`article_id`) REFERENCES `articles` (`id`) ON DELETE CASCADE, CONSTRAINT `articles_category_links_inv_fk` FOREIGN KEY (`category_id`) REFERENCES `categories` (`id`) ON DELETE CASCADE);
CREATE INDEX `articles_category_links_fk` on `articles_category_links` (`article_id`);
CREATE INDEX `articles_category_links_inv_fk` on `articles_category_links` (`category_id`);
CREATE TABLE IF NOT EXISTS "articles_author_links" (`article_id` integer NULL, `writer_id` integer NULL, CONSTRAINT `articles_author_links_fk` FOREIGN KEY (`article_id`) REFERENCES `articles` (`id`) ON DELETE CASCADE, CONSTRAINT `articles_author_links_inv_fk` FOREIGN KEY (`writer_id`) REFERENCES `writers` (`id`) ON DELETE CASCADE, CONSTRAINT `articles_author_links_fk` FOREIGN KEY (`article_id`) REFERENCES `articles` (`id`) ON DELETE CASCADE, CONSTRAINT `articles_author_links_inv_fk` FOREIGN KEY (`writer_id`) REFERENCES `writers` (`id`) ON DELETE CASCADE);
CREATE INDEX `articles_author_links_fk` on `articles_author_links` (`article_id`);
CREATE INDEX `articles_author_links_inv_fk` on `articles_author_links` (`writer_id`);
CREATE TABLE IF NOT EXISTS "globals_components" (`id` integer PRIMARY KEY AUTOINCREMENT NOT NULL, `entity_id` integer NULL, `component_id` integer NULL, `component_type` varchar(255) NULL, `field` varchar(255) NULL, `order` integer NULL DEFAULT '0', CONSTRAINT `globals_entity_fk` FOREIGN KEY (`entity_id`) REFERENCES `globals` (`id`) ON DELETE CASCADE, CONSTRAINT `globals_entity_fk` FOREIGN KEY (`entity_id`) REFERENCES `globals` (`id`) ON DELETE CASCADE);
CREATE INDEX `globals_field_index` on `globals_components` (`field`);
CREATE INDEX `globals_component_type_index` on `globals_components` (`component_type`);
CREATE INDEX `globals_entity_fk` on `globals_components` (`entity_id`);
CREATE TABLE IF NOT EXISTS "homepages_components" (`id` integer PRIMARY KEY AUTOINCREMENT NOT NULL, `entity_id` integer NULL, `component_id` integer NULL, `component_type` varchar(255) NULL, `field` varchar(255) NULL, `order` integer NULL DEFAULT '0', CONSTRAINT `homepages_entity_fk` FOREIGN KEY (`entity_id`) REFERENCES `homepages` (`id`) ON DELETE CASCADE, CONSTRAINT `homepages_entity_fk` FOREIGN KEY (`entity_id`) REFERENCES `homepages` (`id`) ON DELETE CASCADE);
CREATE INDEX `homepages_field_index` on `homepages_components` (`field`);
CREATE INDEX `homepages_component_type_index` on `homepages_components` (`component_type`);
CREATE INDEX `homepages_entity_fk` on `homepages_components` (`entity_id`);
